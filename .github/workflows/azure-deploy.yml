name: Build and deploy Docker app to Azure

on:
  push:
    branches: [ master ]
  workflow_dispatch:


env:
  AZURE_WEBAPP_NAME: AppWithContainer1231231245435
  CONTAINER_REGISTRY: acrcandidates.azurecr.io
  AZURE_RESOURCE_GROUP: platform_candidate_1
  AZURE_APP_PLAN: ASP-scilentmuseum-9e05
  IMAGE_NAME: nodejsapp
  TF_WORKING_DIR: infra

permissions:
  contents: read
  id-token: write

jobs:
  build-and-deploy-to-dev:
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # --- Terraform -----------------------------------------------------------------

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      # Export ARM_* from AZURE_CREDENTIALS so the azurerm provider can auth explicitly
      - name: Export ARM_* env vars
        run: |
          echo '${{ secrets.AZURE_CREDENTIALS }}' > cred.json
          echo "ARM_CLIENT_ID=$(jq -r .clientId cred.json)" >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=$(jq -r .clientSecret cred.json)" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=$(jq -r .tenantId cred.json)" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=$(jq -r .subscriptionId cred.json)" >> $GITHUB_ENV
          rm cred.json

      - name: Terraform init
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform init -input=false

      - name: Terraform validate
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform validate

      - name: Terraform plan
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          terraform plan -out=tfplan -input=false \
            -var="resource_group_name=${{ env.AZURE_RESOURCE_GROUP }}" \
            -var="app_service_plan_name=${{ env.AZURE_APP_PLAN }}" \
            -var="webapp_name=${{ env.AZURE_WEBAPP_NAME }}"

      - name: Terraform apply
        if: github.ref == 'refs/heads/master'
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          terraform apply -input=false -auto-approve tfplan

      # --- Build & deploy container ---------------------------------------------------

      - name: ACR login
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.CONTAINER_REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build & push image
        run: |
          IMAGE=${{ env.CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker build -t "$IMAGE" .
          docker push "$IMAGE"

      - name: Deploy to Azure Web App (Containers)
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          images: ${{ env.CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          # startup-command: 'python -m gunicorn app:app --bind 0.0.0.0:8000'
